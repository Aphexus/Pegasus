@model SequenceExpression
{{
    var startCursorName = this.CreateVariable("startCursor");
    var oldResultName = this.currentResultName;
    var oldResultType = this.currentResultType;

    var sequence = model.Sequence;

    var codeExpression = sequence.Count > 0
        ? sequence[sequence.Count - 1] as CodeExpression
        : null;
    if (codeExpression != null && codeExpression.CodeType == CodeType.State)
    {
        codeExpression = null;
    }

    if (codeExpression == null)
    {
        var newSequence = new List<Expression>(sequence.Count + 1);
        newSequence.AddRange(sequence);
        newSequence.Add(null);
        sequence = newSequence;
    }
}}
var {{: startCursorName }} = cursor;
{{@RenderSequence new { FinalResultName = oldResultName, FinalResultType = oldResultType, Index = 0, Sequence = sequence, StartCursorName = startCursorName } }}
{{
    this.currentResultName = oldResultName;
    this.currentResultType = oldResultType;
}}
